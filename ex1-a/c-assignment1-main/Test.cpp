/**
 * An example of how to write unit tests.
 * Use this as a basis to build a more complete Test.cpp file.
 * 
 * IMPORTANT: Please write more tests - the tests here are only for example and are not complete.
 *
 * AUTHORS: <Yehudit Brickner>
 * 
 * Date: 2021-02
 */



#include "doctest.h"
#include "mat.hpp"
#include <string>
#include <algorithm>
using namespace ariel;
using namespace std;



namespace ariel{

/**
 * Returns the input string without the whitespace characters: space, newline and tab.
 * Requires std=c++2a.
 */
	string nospaces(string input) {
		std::erase(input, ' ');
		std::erase(input, '\t');
		std::erase(input, '\n');
		std::erase(input, '\r');
		return input;
	}
}





TEST_CASE("tiny"){
	CHECK(nospaces(mat(1, 1, '@', '-')) == nospaces("@"));
	
	CHECK(nospaces(mat(3, 1, '&', '*')) == nospaces("&&&"));
	
	CHECK(nospaces(mat(1, 3, '&', '*')) == nospaces("&\n"
													 "&\n"
													 "&\n"));

}

TEST_CASE("small square"){
	CHECK(nospaces(mat(3, 3, '+', '*')) == nospaces("+++\n"
													 "+*+\n"
													 "+++"));

	CHECK(nospaces(mat(5, 5, '^', '$')) == nospaces("^^^^^\n"
													 "^$$$^\n"
													 "^$^$^\n"
													 "^$$$^\n"
													 "^^^^^"));	
	CHECK(nospaces(mat(3, 3, '+', '+')) == nospaces("+++\n"
													 "+++\n"
													 "+++"));													 

}


TEST_CASE("big square"){
	CHECK(nospaces(mat(19, 19, '@', '-')) == nospaces("@@@@@@@@@@@@@@@@@@@\n"
													   "@-----------------@\n"
													   "@-@@@@@@@@@@@@@@@-@\n"
													   "@-@-------------@-@\n"
													   "@-@-@@@@@@@@@@@-@-@\n"
													   "@-@-@---------@-@-@\n"
													   "@-@-@-@@@@@@@-@-@-@\n"
													   "@-@-@-@-----@-@-@-@\n"
													   "@-@-@-@-@@@-@-@-@-@\n"
													   "@-@-@-@-@-@-@-@-@-@\n"
													   "@-@-@-@-@@@-@-@-@-@\n"
													   "@-@-@-@-----@-@-@-@\n"
													   "@-@-@-@@@@@@@-@-@-@\n"
													   "@-@-@---------@-@-@\n"
													   "@-@-@@@@@@@@@@@-@-@\n"
													   "@-@-------------@-@\n"
													   "@-@@@@@@@@@@@@@@@-@\n"
													   "@-----------------@\n"
													   "@@@@@@@@@@@@@@@@@@@\n"));
	
}

TEST_CASE("small rectangel") {
	CHECK(nospaces(mat(9, 7, '@', '-')) == nospaces("@@@@@@@@@\n"
													 "@-------@\n"
													 "@-@@@@@-@\n"
													 "@-@---@-@\n"
													 "@-@@@@@-@\n"
													 "@-------@\n"
													 "@@@@@@@@@\n"));
	
	CHECK(nospaces(mat(11, 5, '&', '-')) == nospaces("&&&&&&&&&&&\n"
													  "&---------&\n"
													  "&-&&&&&&&-&\n"
													  "&---------&\n"
													  "&&&&&&&&&&&\n"));
}

TEST_CASE("big rectangel"){
	CHECK(nospaces(mat(25, 15, '*', '!')) == nospaces("*************************\n"
													   "*!!!!!!!!!!!!!!!!!!!!!!!*\n"
													   "*!*********************!*\n"
													   "*!*!!!!!!!!!!!!!!!!!!!*!*\n"
													   "*!*!*****************!*!*\n"
													   "*!*!*!!!!!!!!!!!!!!!*!*!*\n"
													   "*!*!*!*************!*!*!*\n"
													   "*!*!*!*!!!!!!!!!!!*!*!*!*\n"
													   "*!*!*!*************!*!*!*\n"
													   "*!*!*!!!!!!!!!!!!!!!*!*!*\n"
													   "*!*!*****************!*!*\n"
													   "*!*!!!!!!!!!!!!!!!!!!!*!*\n"
													   "*!*********************!*\n"
													   "*!!!!!!!!!!!!!!!!!!!!!!!*\n"
													   "*************************"));
}

TEST_CASE("huge recatangel"){
	CHECK(nospaces(mat(47, 25,'*','$')) == nospaces ("***********************************************\n"
									  				 "*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*\n"
									            	 "*$*******************************************$*\n"
									  				 "*$*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*$*\n"
									  				 "*$*$***************************************$*$*\n"
									        		 "*$*$*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*$*$*\n"
									        		 "*$*$*$***********************************$*$*$*\n"
									            	 "*$*$*$*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*$*$*$*\n"
									  				 "*$*$*$*$*******************************$*$*$*$*\n"
									  				 "*$*$*$*$*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*$*$*$*$*\n"
									  				 "*$*$*$*$*$***************************$*$*$*$*$*\n"
									  				 "*$*$*$*$*$*$$$$$$$$$$$$$$$$$$$$$$$$$*$*$*$*$*$*\n"
									  				 "*$*$*$*$*$*$***********************$*$*$*$*$*$*\n"
									  				 "*$*$*$*$*$*$$$$$$$$$$$$$$$$$$$$$$$$$*$*$*$*$*$*\n"
									  				 "*$*$*$*$*$***************************$*$*$*$*$*\n"
									  				 "*$*$*$*$*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*$*$*$*$*\n"
									  				 "*$*$*$*$*******************************$*$*$*$*\n"
									  				 "*$*$*$*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*$*$*$*\n"
									  				 "*$*$*$***********************************$*$*$*\n"
									  				 "*$*$*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*$*$*\n"
									  				 "*$*$***************************************$*$*\n"
									  				 "*$*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*$*\n"
									  				 "*$*******************************************$*\n"
									  				 "*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*\n"
									  				 "***********************************************"));
}

TEST_CASE("long or wide rectangel"){
	CHECK(nospaces(mat(5, 15, '-', '#')) == nospaces("-----\n"
													  "-###-\n"
													  "-#-#-\n"
													  "-#-#-\n"
													  "-#-#-\n"
													  "-#-#-\n"
													  "-#-#-\n"
													  "-#-#-\n"
													  "-#-#-\n"
													  "-#-#-\n"
													  "-#-#-\n"
													  "-#-#-\n"
													  "-#-#-\n"
													  "-###-\n"
													  "-----"));

	CHECK(nospaces(mat(21, 5, '-', '+')) == nospaces("---------------------\n"
													  "-+++++++++++++++++++-\n"
													  "-+-----------------+-\n"
													  "-+++++++++++++++++++-\n"
													  "---------------------"));

}

TEST_CASE("super long or wide rectangel"){
CHECK(nospaces(mat(77, 11 , '-', '+')) == nospaces("-----------------------------------------------------------------------------\n"
													"-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-\n"
													"-+-------------------------------------------------------------------------+-\n"
													"-+-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-+-\n"
													"-+-+---------------------------------------------------------------------+-+-\n"
													"-+-+-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-+-+-\n"
													"-+-+---------------------------------------------------------------------+-+-\n"
													"-+-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-+-\n"
													"-+-------------------------------------------------------------------------+-\n"
													"-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-\n"
													"-----------------------------------------------------------------------------"));

CHECK(nospaces(mat( 15, 83, '!', '@')) == nospaces("!!!!!!!!!!!!!!!\n"
													"!@@@@@@@@@@@@@!\n"
													"!@!!!!!!!!!!!@!\n"
													"!@!@@@@@@@@@!@!\n"
													"!@!@!!!!!!!@!@!\n"
													"!@!@!@@@@@!@!@!\n"
													"!@!@!@!!!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!@!@!@!@!\n"
													"!@!@!@!!!@!@!@!\n"
													"!@!@!@@@@@!@!@!\n"
													"!@!@!!!!!!!@!@!\n"
													"!@!@@@@@@@@@!@!\n"
													"!@!!!!!!!!!!!@!\n"
													"!@@@@@@@@@@@@@!\n"
													"!!!!!!!!!!!!!!!"));

}


TEST_CASE("bad input even") {
    CHECK_THROWS(mat(10, 5, '$', '%'));
    
	CHECK_THROWS(mat(7, 2, '$', '%'));

	CHECK_THROWS(mat(6, 2, '$', '%'));
}

TEST_CASE("bad input zero") {
    CHECK_THROWS(mat(0, 5, '$', '%'));
    
	CHECK_THROWS(mat(7, 0, '$', '%'));

	CHECK_THROWS(mat(0, 0, '$', '%'));
}

TEST_CASE("bad input negative") {
    CHECK_THROWS(mat(-7, 5, '$', '%'));
    
	CHECK_THROWS(mat(7, -2, '$', '%'));

	CHECK_THROWS(mat(-9, -2, '$', '%'));
}



TEST_CASE("bad input illegal symbol") {
    CHECK_THROWS(mat(10, 5, ' ', '%'));

	CHECK_THROWS(mat(10, 5, '\n', '!'));

	CHECK_THROWS(mat(10, 5, '\r', '*'));

	CHECK_THROWS(mat(10, 5, '\t', '+'));
	
	CHECK_THROWS(mat(10, 5, '/', ' '));

	CHECK_THROWS(mat(10, 5, '-', '\n'));

	CHECK_THROWS(mat(10, 5, '+', '\r'));

	CHECK_THROWS(mat(10, 5, '*', '\t'));
}

TEST_CASE("more then 1 problem in the input"){
    
	CHECK_THROWS(mat(0, -2, '$', '%')); // zero and negative

	CHECK_THROWS(mat(4, 0, '$', '%')); // zero and even

	
}



